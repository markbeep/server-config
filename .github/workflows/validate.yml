name: Validate Config
on: push

jobs:
  validate:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.3"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Setup dhall Linux
        if: runner.os == "Linux"
        run: |
          wget https://github.com/dhall-lang/dhall-haskell/releases/download/1.41.2/dhall-json-1.7.11-x86_64-Linux.tar.bz2
          tar --extract --file dhall-json-*-x86_64-Linux.tar.bz2
          mkdir build
      - name: Setup dhall Windows
        if: runner.os == "Windows"
        run: |
          Invoke-WebRequest -Uri https://github.com/dhall-lang/dhall-haskell/releases/download/1.41.2/dhall-json-1.7.11-x86_64-Windows.zip -OutFile dhall.zip
          unzip dhall.zip
          md build
      - name: Setup dhall Linux
        if: runner.os == "macOS"
        run: |
          wget https://github.com/dhall-lang/dhall-haskell/releases/download/1.41.2/dhall-json-1.7.11-x86_64-macOS.tar.bz2
          tar --extract --file dhall-json-*-x86_64-macOS.tar.bz2
          mkdir build
      - name: Install Dependencies
        run: |
          python -m venv .venv
          poetry export -f requirements.txt -o requirements.txt
          .venv/bin/pip install -r requirements.txt
      - name: Validate config
        run: |
          bin/dhall-to-json --file configs/servers.dhall --output build/config.json
          .venv/bin/python validate.py
